name: vefa-validator Master Build

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
  release:
    types: [created]

env:
  IMAGE_NAME: norstella/vefa-validator
  PROJECT_VERSION: 2.3.1

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        jdk: [11,17,21]
        platform:
          - linux/amd64
          - linux/arm64
    name: Java ${{ matrix.jdk }} build on platform ${{ matrix.platform }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Build and deploy with Maven Central Repository
        run: mvn --batch-mode --update-snapshots --no-transfer-progress deploy -Prelease-sign-artifacts
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_TOKEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Prepare for multiple platform
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate build configuration
        uses: docker/build-push-action@v6
        with:
          call: check

#      - name: Build and export to Docker
#        uses: docker/build-push-action@v6
#        with:
##          load: true
#          tags: ${{ env.IMAGE_NAME }}:${{ env.PROJECT_VERSION }}
#
#      - name: Test
#        run: |
#          docker run --rm ${{ env.IMAGE_NAME }}:${{ env.PROJECT_VERSION }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
#          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
#          load: true # load multi-platform images
          push: ${{ github.event_name != 'pull_request' }}
          sbom: true
          provenance: mode=max
#          tags: ${{ env.IMAGE_NAME }}:${{ env.PROJECT_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
#          annotations: ${{ steps.meta.outputs.annotations }}
          outputs: type=image,"name=${{ env.IMAGE_NAME }}",push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}     
            type=semver,pattern={{major}}
            type=sha

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf '${{ env.DOCKERHUB_REPO }}@sha256:%s ' *)

      - name: Inspect image
        run: docker buildx imagetools inspect ${{ env.DOCKERHUB_REPO }}:${{ steps.meta.outputs.version }}
